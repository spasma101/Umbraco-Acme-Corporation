@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.Forms>
@using Umbraco.Core.Composing
@using ContentModels = Umbraco.Web.PublishedModels;
@{
	Layout = "Master.cshtml";

	var formsTitle = Model.Value("formsTitle");

	var formsDescription = Model.Value("formsDescription");

	var heroImage = Model.Value<IPublishedContent>("heroImage");

	var forms = Model.Children<Form>();

	var user = Members.CurrentUserName;
	var services = Current.Services.MemberService;

	var servicesResult = services.GetByUsername(user);
	var memberType = servicesResult.ContentTypeAlias;

}
@if (Umbraco.MemberIsLoggedOn() && memberType == "adminMember")
{
	<div class="row">
		<div class="col-12">
			<div class="jumbotron jumbotron-fluid h-100" style="background-image: url(@heroImage.Url)">
				<div class="container mt-5">
					<h1 class="display-4" style="color: #05ffff;">@formsTitle</h1>
					<p class="lead" style="color: #05ffff;">@formsDescription</p>
				</div>
			</div>
		</div>
	</div>

	<div class="row mt-5">
		<div class="col-12 mt-5">
			@{

				var pageSize = 12;
				var page = 1;
				int.TryParse(Request.QueryString["page"], out page);
				var totalPages = (int)Math.Ceiling((double)forms.Count() / (double)pageSize);


				if (page > totalPages)
				{
					page = totalPages;
				}
				else if (page < 1)
				{
					page = 1;
				}

				foreach (var form in forms.Skip((page - 1) * pageSize).Take(pageSize))
				{
					var formName = form.Name;
					var firstName = form.Value("firstName");
					var lastName = form.Value("lastName");
					var emailAddress = form.Value("emailAddress");
					var productSerialNumber = form.Value("productSerialNumber");
					var productSerialNumber2 = form.Value("productSerialNumber2");
					<div class="col-sm-3">
						<div class="card">
							<div class="card-body">
								<h4 class="card-title">@formName</h4>
								<p class="card-text">Full Name = @firstName @lastName</p>
								<p class="card-text">Email Address = @emailAddress</p>
								<p class="card-text">First Entry = @productSerialNumber</p>
								<p class="card-text">Second Entry = @productSerialNumber2</p>
							</div>
						</div>
					</div>
				}

				<div class="pagination">

					@if (totalPages > 0)
					{
						<ul>
							Pagination
							@{
								int showMax = 10;

								//First Page
								if (page > 1)
								{

									<li>
										<a href="?page=@(page - 1)">&#9668;</a>
									</li>

									<li>
										<a href="?page=1">&hellip;</a>
									</li>
								}

								//Pages
								if (page <= totalPages)
								{
									for (int i = page - 4; i >= page - 4; i++)
									{

										if (i >= 1 && i != page)
										{
											<li>
												<a href="?page=@i">@i</a>
											</li>
										}
										if (i == page)
										{
											break;
										}
									}


									<li>
										<a class="pagination__Current" href="?page=@page">@page</a>
									</li>


									for (int x = page + 1; x <= page + 4; x++)
									{
										if (x <= totalPages && x != page)
										{
											<li>
												<a href="?page=@x">@x</a>
											</li>
										}
										if (x > totalPages)
										{
											break;
										}
									}


								}

								//Last Page
								if (page < totalPages)
								{
									<li>
										<a href="?page=@(totalPages)">&hellip;</a>

									</li>
									<li>
										<a href="?page=@(page + 1)">&#9658;</a>

									</li>
								}
								else if (page == totalPages)
								{
								}
							}

						</ul>
					}

				</div>
			}
		</div>
	</div>
}
else if (memberType == "Member")
{
	<h1>You shouldn't be here should you....</h1>
	Html.RenderAction("RenderLogin", "Member");
}
else if (memberType == "member")
{
	<h1>Please Login to Continue to the website</h1>
	Html.RenderAction("RenderLogin", "Member");
}